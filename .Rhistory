grade_c = 'Tumor grade',
comorbid2 = 'Comorbidity status',
race_c = 'Race/ethnicity',
marital2 = 'Marital status',
insurance = 'Insurance status',
POVERTY = 'Poverty status',
EDUCA = 'Education status',
URBRUR = 'Urban/rural status',
coc2 = 'CoC accreditation status',
neo_chemo = 'Neo-adjuvant chemotherapy',
age_cate = "Age group"
)
levels(clean_dat$gc_dich2) <- c("no", "yes") # 1=no, 2=yes
levels(clean_dat$stage_c) <- c('I', 'II', 'III') # 1='I', 2='II', 3='III'
levels(clean_dat$grade_c) <- c('Well diff.', 'Moderately diff.', 'Poorly or Undiff.') # 1=Well diff. , 2=Moderately diff. , 3= Poorly or Undiff.
levels(clean_dat$comorbid2) <- c('None','Mild', 'Moderate', 'Severe')  # 1=None, 2=Mild, 3=Moderate, 4=Severe
levels(clean_dat$race_c) <- c('NHW', 'NHB', 'Other') # 1=NHW, 2=NHB, 3=Other
levels(clean_dat$marital2) <- c('Married', 'Single', 'Sep/Div/Wid') # 1= Married, 2= Single, 3=Sep/Div/Wid
levels(clean_dat$insurance) <- c('Private', 'Uninsured', 'Medicaid', 'Medicare/Other') # 1=Private, 2=Uninsured, 3=Medicaid, 4=Medicare/Other
levels(clean_dat$POVERTY) <- c('<20% below Fed', '≥20% above Fed') # 1= <20% below Fed, 2= ≥20% above Fed
levels(clean_dat$EDUCA) <-  c('<25% w/o HS edu', '≥25% w/o HS edu') # 1=<25% w/o HS edu, 2= ≥25% w/o HS edu
levels(clean_dat$URBRUR) <- c('Urban', 'Rural', 'Mixed') # 1=Urban, 2= Rural, 3=Mixed
levels(clean_dat$coc2) <-  c('No', 'Yes') # 1= No, 2=Yes
levels(clean_dat$neo_chemo) <- c('No', 'Yes') # 0=No, 1=Yes
clean_dat$death <- ifelse(clean_dat$cod == 0, 0, 1)
ifelse(clean_dat$cod == 0, 0, 1)
clean_dat$death <- ifelse(clean_dat$COD == 0, 0, 1)
dir.create("clean_data")
saveRDS(clean_dat,
file=here::here('clean_data/clean_dat.rds'))
here::i_am("code/02_make_model.Rmd")
library(survival)
?Sruv
?Surv
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=gc_dich2~coc2, data=dat)
fitT.LX <- coxph(formula=Surv(FUDAYS11, death)~gc_dich2, data=dat)
here::i_am("code/02_make_model.Rmd")
library(survival)
dat <- readRDS(here::here('clean_data/clean_dat.rds'))
View(dat)
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=gc_dich2~coc2, data=dat)
dat$gc_dich2
glm(formula=gc_dich2~coc2, data=dat)
rbinom(n, 1, 0.5)
rbinom(n, 1, 0.7*Z+0.2*(1-Z))
Z <- rbinom(n, 1, 0.5)
X <- rbinom(n, 1, 0.7*Z+0.2*(1-Z))
X
table(dat$gc_dich2)
table(dat$coc2)
table(dat$coc2, dat$gc_dich2)
glm(formula=gc_dich2~coc2, data=dat)
View(dat)
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=as.numerci(gc_dich2)~coc2, data=dat)
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=as.numeric(gc_dich2)~coc2, data=dat)
fitT.LX <- coxph(formula=Surv(FUDAYS11, death)~gc_dich2, data=dat)
fitIV <- ivcoxph(estmethod="ts", fitX.LZ=fitX.LZ, fitT.LX=fitT.LX, data=dat,
ctrl=TRUE)
library(ivtools)
install.packages()
install.packages('ivtools')
library(survival)
library(ivtools)
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=as.numeric(gc_dich2)~coc2, data=dat)
fitT.LX <- coxph(formula=Surv(FUDAYS11, death)~gc_dich2, data=dat)
fitIV <- ivcoxph(estmethod="ts", fitX.LZ=fitX.LZ, fitT.LX=fitT.LX, data=dat,
ctrl=TRUE)
dat$coc2 <- as.numeric(dat$coc2)
dat$gc_dich2 <- as.numeric(dat$gc_dich2)
# Z <- dat$coc2
# X <- dat$gc_dich2
# T <- dat$FUDAYS11
# d <- dat$death
fitX.LZ <- glm(formula=gc_dich2~coc2, data=dat)
fitT.LX <- coxph(formula=Surv(FUDAYS11, death)~gc_dich2, data=dat)
fitIV <- ivcoxph(estmethod="ts", fitX.LZ=fitX.LZ, fitT.LX=fitT.LX, data=dat,
ctrl=TRUE)
summary(fitIV)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2+Z, data=dat)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="X", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX,
data=dat, t=1)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX,
data=dat, t=1)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat, t=1)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat, t=1)
fitZ.L
fitT.LZX
Sys.setenv(language='US')
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat, t=1)
table$coc2
table(dat$coc2)
table(dat$death)
table(dat$gc_dich2)
table(dat$FUDAYS11)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat, t=1)
fitZ.L
fitT.LZX
?ivcoxph
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death)~gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat)
fitZ.L <- glm(formula=coc2~1, data=dat)
fitT.LZX <- survfit(formula=Surv(FUDAYS11, death) ~ gc_dich2 + coc2, data=dat)
fitIV <- ivcoxph(estmethod="g", X="gc_dich2", fitZ.L=fitZ.L, fitT.LZX=fitT.LZX, data=dat, t=1)
summary(fitT.LZA)
summary(fitT.LZX)
summary(fitZ.L)
library(here)
library(haven)
here::i_am("code/00_clean_data.Rmd")
absolute_path_to_data <- here::here("raw_data", "analytic1.sas7bdat")
dat <- read_sas(absolute_path_to_data)
library(readxl)
library(writexl)
nrow <- length(colnames(dat))
variable <- data.frame(matrix(ncol=2, nrow = nrow))
colnames(variable) <- c('Variables', 'Description')
variable[1:nrow, 'Variables'] <- colnames(dat)
library(tidyverse)
# library(Hmisc)
library(labelled)
library(gtsummary)
clean_dat <- dat[, c('REGISID','DXSTATE', 'gc_dich2', 'stage_c','grade_c','comorbid2', 'AGE','race_c', 'marital2',
'insurance','POVERTY', 'EDUCA', 'URBRUR', 'coc2', 'neo_chemo', 'COD', 'delay_time', 'FUDAYS11')]
# clean_dat$AGE <- as.numeric(clean_dat$AGE)
clean_dat$age_cate <- cut(clean_dat$AGE,
breaks=c(0,43,61,78,100))
factor_variables <- c('DXSTATE', 'gc_dich2', 'stage_c','grade_c','comorbid2','race_c', 'marital2',
'insurance','POVERTY', 'EDUCA', 'URBRUR', 'coc2', 'neo_chemo', 'COD', 'age_cate')
clean_dat[factor_variables] <- lapply(clean_dat[factor_variables], factor)
var_label(clean_dat) <- list(
DXSTATE = 'State',
gc_dich2 = "Jointly guideline concordant",
stage_c = 'Stage',
grade_c = 'Tumor grade',
comorbid2 = 'Comorbidity status',
race_c = 'Race/ethnicity',
marital2 = 'Marital status',
insurance = 'Insurance status',
POVERTY = 'Poverty status',
EDUCA = 'Education status',
URBRUR = 'Urban/rural status',
coc2 = 'CoC accreditation status',
neo_chemo = 'Neo-adjuvant chemotherapy',
age_cate = "Age group"
)
levels(clean_dat$gc_dich2) <- c("no", "yes") # 1=no, 2=yes
levels(clean_dat$stage_c) <- c('I', 'II', 'III') # 1='I', 2='II', 3='III'
levels(clean_dat$grade_c) <- c('Well diff.', 'Moderately diff.', 'Poorly or Undiff.') # 1=Well diff. , 2=Moderately diff. , 3= Poorly or Undiff.
levels(clean_dat$comorbid2) <- c('None','Mild', 'Moderate', 'Severe')  # 1=None, 2=Mild, 3=Moderate, 4=Severe
levels(clean_dat$race_c) <- c('NHW', 'NHB', 'Other') # 1=NHW, 2=NHB, 3=Other
levels(clean_dat$marital2) <- c('Married', 'Single', 'Sep/Div/Wid') # 1= Married, 2= Single, 3=Sep/Div/Wid
levels(clean_dat$insurance) <- c('Private', 'Uninsured', 'Medicaid', 'Medicare/Other') # 1=Private, 2=Uninsured, 3=Medicaid, 4=Medicare/Other
levels(clean_dat$POVERTY) <- c('<20% below Fed', '≥20% above Fed') # 1= <20% below Fed, 2= ≥20% above Fed
levels(clean_dat$EDUCA) <-  c('<25% w/o HS edu', '≥25% w/o HS edu') # 1=<25% w/o HS edu, 2= ≥25% w/o HS edu
levels(clean_dat$URBRUR) <- c('Urban', 'Rural', 'Mixed') # 1=Urban, 2= Rural, 3=Mixed
levels(clean_dat$coc2) <-  c('No', 'Yes') # 1= No, 2=Yes
levels(clean_dat$neo_chemo) <- c('No', 'Yes') # 0=No, 1=Yes
clean_dat$death <- ifelse(clean_dat$COD == 0, 0, 1)
dir.create("clean_data")
saveRDS(clean_dat,
file=here::here('clean_data/clean_dat.rds'))
library(gtsummary)
table_one_jgc <- dat |>
select("DXSTATE", 'gc_dich2', "stage_c",  "grade_c", "comorbid2", "age_cate", "race_c",  "marital2", "insurance", "POVERTY",
"EDUCA", "URBRUR", "coc2", "COD", "delay_time", "FUDAYS11") |> # "neo_chemo",
tbl_summary(by = gc_dich2, type = all_dichotomous() ~ "categorical") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**JGC**") |>
add_overall() |>
add_p()
dat <- readRDS(here::here('clean_data/clean_dat.rds'))
View(dat)
here::i_am("code/01_make_table1.Rmd")
dat <- readRDS(here::here('clean_data/clean_dat.rds'))
library(gtsummary)
table_one_jgc <- dat |>
select("DXSTATE", 'gc_dich2', "stage_c",  "grade_c", "comorbid2", "age_cate", "race_c",  "marital2", "insurance", "POVERTY",
"EDUCA", "URBRUR", "neo_chemo", "coc2", "COD", "delay_time", "FUDAYS11") |>
tbl_summary(by = gc_dich2, type = all_dichotomous() ~ "categorical") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**JGC**") |>
add_overall() |>
add_p()
table_one_jgc
library(table1)
table1(~ DXSTATE + stage_c + grade_c + comorbid2 + age_cate + race_c + marital2 + insurance + POVERTY +
EDUCA + URBRUR + coc2 + neo_chemo + COD + delay_time + FUDAYS11| gc_dich2,
data=dat, overall = FALSE, render.missing=NULL)
table_one_coc <- dat |>
select("DXSTATE", 'gc_dich2', "stage_c",  "grade_c", "comorbid2", "age_cate", "race_c",  "marital2", "insurance", "POVERTY",
"EDUCA", "URBRUR", "coc2", "COD", "delay_time", "FUDAYS11") |> #"neo_chemo",
tbl_summary(by = coc2, type = all_dichotomous() ~ "categorical") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**CoC**") |>
add_overall() |>
add_p()
table_one_coc
table_one_state <- dat |>
select("DXSTATE", 'gc_dich2', "stage_c",  "grade_c", "comorbid2", "age_cate", "race_c",  "marital2", "insurance", "POVERTY",
"EDUCA", "URBRUR", "coc2", "COD", "delay_time", "FUDAYS11") |> #"neo_chemo",
tbl_summary(by = DXSTATE, type = all_dichotomous() ~ "categorical") |>
modify_spanning_header(c("stat_1", "stat_2") ~ "**State**") |>
add_overall() |>
add_p()
table_one_state
table1(~ gc_dich2 + stage_c + grade_c + comorbid2 + age_cate + race_c + marital2 + insurance + POVERTY +
EDUCA + URBRUR + coc2 + neo_chemo + COD + delay_time + FUDAYS11 |DXSTATE,
data=dat, overall = FALSE, render.missing=NULL)
saveRDS(
table_one_coc,
file = here::here("tables/table_one_coc.rds")
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
here::i_am("code/hiv_report.Rmd")
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
here::i_am("jgc_report.Rmd")
data <- readRDS(
file = here::here("clean_data/clean_dat.rds")
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
here::i_am("jgc_report.Rmd")
data <- readRDS(
file = here::here("clean_data/clean_dat.rds")
)
table_one_coc <- readRDS(
file = here::here("tables/table_one_coc.rds")
)
saveRDS(
table_one_coc,
file = here::here("tables/table_one_coc.rds")
)
saveRDS(
table_one_state,
file = here::here("tables/table_one_state.rds")
)
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
here::i_am("jgc_report.Rmd")
data <- readRDS(
file = here::here("clean_data/clean_dat.rds")
)
table_one_coc <- readRDS(
file = here::here("tables/table_one_coc.rds")
)
table_one_coc
table_one_state <- readRDS(
file = here::here("tables/table_one_state.rds")
)
table_one_state
getwd()
library(knitr)
opts_chunk$set(
echo = FALSE, warning = FALSE, message = FALSE
)
here::i_am("code/hiv_report.Rmd")
data <- readRDS(
file = here::here("derived_data/data_clean.rds")
)
table_one <- readRDS(
file = here::here("tables/table_one.rds")
)
table_one
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("figures/scatterplot.png")
)
both_regression_tables <- readRDS(
file = here::here("tables/both_regression_tables.rds")
)
both_regression_tables$primary
both_regression_tables$secondary
table2 <- readRDS("C:/Users/sleep/OneDrive - Emory University/2024 Spring/DATA 550/class5/project3/project3(1)/subproject2/output/table2.rds")
View(table2)
table2$primary
table2$secondary
data(covid19)
library(drord)
data(covid19)
head(covid19)
covid19$age01 <- as.numeric(covid19$age_grp > 4)
table(covid19$age_grp)
head(covid19,5)
# fit saturated regression model
fit_sat_ps <- glm(treat ~ age_grp, data = covid19)
# see what it predicts for each of the two subgroups
subgroups <- data.frame(age_grp = seq(0, 7))
g_n_a1_subgroups <- predict(fit_sat_ps, newdata = subgroups, type = "response")
# predict gives estimates of P(treat = 1 | age01)
g_n_a1_w0_glm <- g_n_a1_subgroups[1]
g_n_a0_w0_glm <- 1 - g_n_a1_w0_glm
g_n_a1_w1_glm <- g_n_a1_subgroups[2]
g_n_a0_w1_glm <- 1 - g_n_a1_w1_glm
round(cbind(g_n_a1_w0_glm, g_n_a0_w0_glm, g_n_a1_w1_glm, g_n_a0_w1_glm), 3)
install.packages('Rtools43')
R.version
model_bsho_binary_multivariate_1 <- geeglm(bsho ~ age_cate*race +
insurance*race + gender + race +
sepsis + uti + ssti +
insurance + hospital +
sum_category +
valvular + vascular + paralysis +
diabetes_c + renal +
other +
strep + cystic_fibrosis + pseudo_aeru + readmission_new,
id= id_empi,
family = binomial(link = "logit"), data = dat,
corstr = "exchangeable")
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(ggstatsplot)
library(geepack)
library(gtsummary)
library(glmtoolbox)
upper <- bsho ~ age_cate*race +
insurance*race + gender + race +
sepsis + uti + ssti +
insurance + hospital +
sum_category +
valvular + vascular + paralysis +
diabetes_c + renal +
other +
strep + cystic_fibrosis + pseudo_aeru + readmission_new
lower <-  ~ sepsis + sum_category + pseudo_aeru + strep
stepCriterion(
model_bsho_binary_multivariate_1,
criterion = "qic",
direction = "backward",
scope=list(lower = lower, upper =  upper)
)
model_bsho_binary_multivariate_1 <- glmgee(bsho ~ age_cate*race +
insurance*race + gender + race +
sepsis + uti + ssti +
insurance + hospital +
sum_category +
valvular + vascular + paralysis +
diabetes_c + renal +
other +
strep + cystic_fibrosis + pseudo_aeru + readmission_new,
id= id_empi,
family = binomial(link = "logit"), data = dat,
corstr = "exchangeable")
dat <- readRDS(
file = here::here("clean_data/data_clean.rds")
)
here::i_am("code/02_make_univariate_models.rmd")
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(ggstatsplot)
library(geepack)
library(gtsummary)
library(glmtoolbox)
dat <- readRDS(
file = here::here("clean_data/data_clean.rds")
)
model_bsho_binary_multivariate_1 <- glmgee(bsho ~ age_cate*race +
insurance*race + gender + race +
sepsis + uti + ssti +
insurance + hospital +
sum_category +
valvular + vascular + paralysis +
diabetes_c + renal +
other +
strep + cystic_fibrosis + pseudo_aeru + readmission_new,
id= id_empi,
family = binomial(link = "logit"), data = dat,
corstr = "exchangeable")
upper <- bsho ~ age_cate*race +
insurance*race + gender + race +
sepsis + uti + ssti +
insurance + hospital +
sum_category +
valvular + vascular + paralysis +
diabetes_c + renal +
other +
strep + cystic_fibrosis + pseudo_aeru + readmission_new
lower <-  ~ sepsis + sum_category + pseudo_aeru + strep
stepCriterion(
model_bsho_binary_multivariate_1,
criterion = "qic",
direction = "backward",
scope=list(lower = lower, upper =  upper)
)
model_bsho_binary_multivariate_final <- geeglm(bsho ~ age_cate*race +
age_cate + gender + race +
sepsis + uti + ssti +
hospital + insurance +
sum_category +
valvular + paralysis +
other +
strep + cystic_fibrosis +
pseudo_aeru + readmission_new,
id= id_empi,
family = binomial(link = "logit"), data = dat,
corstr = "exchangeable")
summary(model_bsho_binary_multivariate_final)
exp(-0.77632)
exp(-0.77632+0.73089)
estimate <- coef(model_bsho_binary_multivariate_final)['raceNon-Hispanic or Latino Black'] +
coef(model_bsho_binary_multivariate_final)['age_cate>40:raceNon-Hispanic or Latino Black']
var <- vcov(model_bsho_binary_multivariate_final)['raceNon-Hispanic or Latino Black', 'raceNon-Hispanic or Latino Black'] +
vcov(model_bsho_binary_multivariate_final)['age_cate>40:raceNon-Hispanic or Latino Black', 'age_cate>40:raceNon-Hispanic or Latino Black'] +
vcov(model_bsho_binary_multivariate_final)['raceNon-Hispanic or Latino Black', 'age_cate>40:raceNon-Hispanic or Latino Black']*2
sd <- sqrt(var)
estimate_lower <- estimate - 1.96*sd
estimate_upper <- estimate + 1.96*sd
print(paste('95% CI is', round(estimate_lower,2), round(estimate_upper,2)))
estimate
print(paste('OR in age >40', exp(estimate)))
print(paste('95% CI is', round(exp(estimate_lower),2), round(exp(estimate_upper),2)))
print(paste('OR in age >40', round(exp(estimate)),2))
print(paste('95% CI is', round(exp(estimate_lower),2), round(exp(estimate_upper),2)))
print(paste('OR in age >40', round(exp(estimate),2)))
table_bsho_binary_multivariate <-  tbl_regression(model_bsho_binary_multivariate, exponentiate = TRUE)
table_bsho_binary_multivariate <-  tbl_regression(model_bsho_binary_multivariate_final, exponentiate = TRUE)
table_bsho_binary_multivariate
getcwd()
getwd()
setwd('C:\Users\sleep\OneDrive - Emory University\2024 Spring\DATA 550\midproject')
setwd('C:/Users/sleep/OneDrive - Emory University/2024 Spring/DATA 550/midproject')
#Here
here::i_am("code/table_YingXu.R")
#Read data
library(tidyverse)
covid_sub <- read_csv(file = here::here("raw_data/covid_sub.csv"))
#Construct table
library(gtsummary)
library(labelled)
var_label(covid_sub) <- list(
AGE = "Patient Age",
PATIENT_TYPE = "Patient Type",
PNEUMONIA = "Pneumonia",
DIABETES = "Diabetes",
ASTHMA = "Asthma",
INMSUPR = "Immunosuppressed",
HIPERTENSION = "Hypertension",
CARDIOVASCULAR = "Heart/blood vessels related disease",
RENAL_CHRONIC = "Chronic renal disease",
OTHER_DISEASE = "Other disease",
OBESITY = "Obese",
TOBACCO = "Tobacco user"
)
table_one <- covid_sub %>%
select("SEX", "AGE", "PATIENT_TYPE", "PNEUMONIA", "DIABETES", "COPD",
"ASTHMA", "INMSUPR", "HIPERTENSION", "CARDIOVASCULAR",
"RENAL_CHRONIC", "OTHER_DISEASE", "OBESITY", "TOBACCO") %>%
filter(AGE != "Unknown",
PNEUMONIA != "Unknown",
DIABETES != "Unknown",
COPD != "Unknown",
ASTHMA != "Unknown",
INMSUPR != "Unknown",
HIPERTENSION != "Unknown",
CARDIOVASCULAR != "Unknown",
RENAL_CHRONIC != "Unknown",
OTHER_DISEASE != "Unknown",
OBESITY != "Unknown",
TOBACCO != "Unknown") %>%
tbl_summary(by = SEX) %>%
add_overall() %>%
add_p()
#Save output
saveRDS(
table_one,
file = here::here("output/table_YingXu.rds")
)
