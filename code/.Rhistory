bn <- ggplot() +
geom_point(aes(df$Bare.Nuclei,df$Class)) +
geom_smooth(aes(df$Bare.Nuclei,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Bare nuclei", size = 6)
ggsave("~/Desktop/FinalProject/output/bn.png", plot = bn)
# Mitoses plot
ggplot() +
geom_point(aes(df$Mitoses,df$Class)) +
geom_smooth(aes(df$Mitoses,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Mitoses") +
ylab("Tumour type") +
xlab("Mitoses") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
um <- ggplot() +
geom_point(aes(df$Mitoses,df$Class)) +
geom_smooth(aes(df$Mitoses,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Mitoses", size = 6)
ggsave("~/Desktop/FinalProject/output/um.png", plot = um)
# bland chromatin plot
ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Bland chromatin") +
ylab("Tumour type") +
xlab("Bland chromatin") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold", margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
bc <- ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Bland chromatin", size = 6)
ggsave("~/Desktop/FinalProject/output/bc.png", plot = bc)
# normal nucleoli plot
ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Normal nucleoli") +
ylab("Tumour type") +
xlab("Normal nucleoli") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
nn <- ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Normal nucleoli", size = 6)
ggsave("~/Desktop/FinalProject/output/nn.png", plot = nn)
# conbining all the plots together
ggarrange(ct, ma, bn, nn, um, bc,
ncol = 2, nrow = 3)
ggsave(
here::here ("output/Bingbing_graph.png"),
plot = bar_graph,
device = "png"
)
source("~/Desktop/Group7_DATA550/code/BIngbing_Graph.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU),
factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED",
"PNEUMONIA",
"PREGNANT",
"DIABETES",
"COPD",
"ASTHMA",
"INMSUPR",
"HIPERTENSION",
"OTHER_DISEASE",
"CARDIOVASCULAR",
"OBESITY",
"RENAL_CHRONIC",
"TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU)
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Grouping age into categories
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Ensure AGE is numeric
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU),
factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED",
"PNEUMONIA",
"PREGNANT",
"DIABETES",
"COPD",
"ASTHMA",
"INMSUPR",
"HIPERTENSION",
"OTHER_DISEASE",
"CARDIOVASCULAR",
"OBESITY",
"RENAL_CHRONIC",
"TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU)
# Ensure AGE is numeric
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf),
labels = c("0-18",
"19-40",
"41-60",
"61-80",
"81+"),
right = FALSE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED", "PNEUMONIA", "PREGNANT", "DIABETES", "COPD", "ASTHMA", "INMSUPR", "HIPERTENSION", "OTHER_DISEASE", "CARDIOVASCULAR", "OBESITY", "RENAL_CHRONIC", "TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
# Creating a graph to analyze treatment outcomes and healthcare utilization
# Grouping age into categories
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Calculating mortality rate by age group and any pre-existing condition
mortality_rate <- analysis_data %>%
mutate(ANY_CONDITION = ifelse(DIABETES == "Yes" | COPD == "Yes" | ASTHMA == "Yes" | INMSUPR == "Yes" | HIPERTENSION == "Yes" | OTHER_DISEASE == "Yes" | CARDIOVASCULAR == "Yes" | OBESITY == "Yes" | RENAL_CHRONIC == "Yes" | TOBACCO == "Yes", "Yes", "No")) %>%
group_by(AGE_GROUP, ANY_CONDITION) %>%
summarise(Mortality_Rate = mean(DIED == "Yes"), .groups = 'drop')
# Plotting
bar_graph <- ggplot(mortality_rate, aes(x = AGE_GROUP, y = Mortality_Rate, fill = ANY_CONDITION)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "COVID-19 Mortality Rate by Age Group and Pre-existing Condition",
x = "Age Group",
y = "Mortality Rate",
fill = "Pre-existing Condition")
ggsave(
here::here ("output/Bingbing_graph.rds"),
plot = bar_graph
)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED", "PNEUMONIA", "PREGNANT", "DIABETES", "COPD", "ASTHMA", "INMSUPR", "HIPERTENSION", "OTHER_DISEASE", "CARDIOVASCULAR", "OBESITY", "RENAL_CHRONIC", "TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
# Creating a graph to analyze treatment outcomes and healthcare utilization
# Grouping age into categories
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Calculating mortality rate by age group and any pre-existing condition
mortality_rate <- analysis_data %>%
mutate(ANY_CONDITION = ifelse(DIABETES == "Yes" | COPD == "Yes" | ASTHMA == "Yes" | INMSUPR == "Yes" | HIPERTENSION == "Yes" | OTHER_DISEASE == "Yes" | CARDIOVASCULAR == "Yes" | OBESITY == "Yes" | RENAL_CHRONIC == "Yes" | TOBACCO == "Yes", "Yes", "No")) %>%
group_by(AGE_GROUP, ANY_CONDITION) %>%
summarise(Mortality_Rate = mean(DIED == "Yes"), .groups = 'drop')
# Plotting
bar_graph <- ggplot(mortality_rate, aes(x = AGE_GROUP, y = Mortality_Rate, fill = ANY_CONDITION)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "COVID-19 Mortality Rate by Age Group and Pre-existing Condition",
x = "Age Group",
y = "Mortality Rate",
fill = "Pre-existing Condition")
ggsave(
here::here("output/Bingbing_graph.png"),
plot = bar_graph
)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED", "PNEUMONIA", "PREGNANT", "DIABETES", "COPD", "ASTHMA", "INMSUPR", "HIPERTENSION", "OTHER_DISEASE", "CARDIOVASCULAR", "OBESITY", "RENAL_CHRONIC", "TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
# Creating a graph to analyze treatment outcomes and healthcare utilization
# Grouping age into categories
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Calculating mortality rate by age group and any pre-existing condition
mortality_rate <- analysis_data %>%
mutate(ANY_CONDITION = ifelse(DIABETES == "Yes" | COPD == "Yes" | ASTHMA == "Yes" | INMSUPR == "Yes" | HIPERTENSION == "Yes" | OTHER_DISEASE == "Yes" | CARDIOVASCULAR == "Yes" | OBESITY == "Yes" | RENAL_CHRONIC == "Yes" | TOBACCO == "Yes", "Yes", "No")) %>%
group_by(AGE_GROUP, ANY_CONDITION) %>%
summarise(Mortality_Rate = mean(DIED == "Yes"), .groups = 'drop')
# Plotting
bar_graph <- ggplot(mortality_rate, aes(x = AGE_GROUP, y = Mortality_Rate, fill = ANY_CONDITION)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "COVID-19 Mortality Rate by Age Group and Pre-existing Condition",
x = "Age Group",
y = "Mortality Rate",
fill = "Pre-existing Condition")
saveRDS(
bar_graph,
file = here::here("output/Bingbing_graph.rds")
)
---
title: "report"
library(tidyverse)
library(here)
here::i_am("code/Bingbing_graph.R")
cd /Users/bingbing/Desktop/Group7_DATA550
library(tidyverse)
library(here)
here::i_am("code/Bingbing_graph.R")
library(tidyverse)
library(here)
here::i_am("code/Bingbing_graph.R")
library(tidyverse)
library(here)
here::i_am("code/Bingbing_graph.R")
library(tidyverse)
library(here)
setwd("/Users/bingbing/Desktop/Group7_DATA550")
here::i_am("code/Bingbing_graph.R")
setwd("/Users/bingbing/Desktop/Group7_DATA550/code")
setwd("/Users/bingbing/Desktop/Group7_DATA550/code")
here::i_am("code/Bingbing_graph.R")
setwd("/Users/bingbing/Desktop/Group7_DATA550/code/Bingbing_graph.R")
setwd("/Users/bingbing/Desktop/Group7_DATA550/code/Bingbing_graph.R")
here::i_am("code/Bingbing_graph.R")
library(tidyverse)
here::i_am("code/02_Bingbing_graph.R")
library(tidyverse)
here::i_am("code/02_Bingbing_graph.R")
data <- read.csv(file = here::here("raw_data/covid_sub.csv"))
library(tidyverse)
here::i_am("code/02_Bingbing_graph.R")
data <- read.csv(file = here::here("data_custom/data_custom.rds"))
# Convert categorical columns to factors
data <- data %>%
mutate(across(c(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor))
rlang::last_trace()
print(names(data))
# Check the names of the columns
print(names(data))
# Update the column names in the mutate function accordingly
# Assuming 'USMER' was a typo and the correct column name is 'USER' as an example
data <- data %>%
mutate(across(c(USER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor))
library(tidyverse)
here::i_am("code/02_Bingbing_graph.R")
data <- readRDS(file = here::here("data_custom/data_custom.rds"))
# Convert categorical columns to factors
data <- data %>%
mutate(across(c(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor))
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED", "PNEUMONIA", "PREGNANT", "DIABETES", "COPD", "ASTHMA", "INMSUPR", "HIPERTENSION", "OTHER_DISEASE", "CARDIOVASCULAR", "OBESITY", "RENAL_CHRONIC", "TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) forcats::fct_explicit_na(x, na_level = "Unknown"))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
# Use quantiles as breaks for age groups
quantile_breaks <- quantile(analysis_data$AGE, probs = seq(0, 1, by = 0.2), na.rm = TRUE)
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = quantile_breaks, include.lowest = TRUE, labels = FALSE)
# Ensure that AGE_GROUP is a factor and has labels
age_group_labels <- sapply(1:(length(quantile_breaks)-1), function(i) paste0("[", quantile_breaks[i], "-", quantile_breaks[i+1], ")"))
analysis_data$AGE_GROUP <- factor(analysis_data$AGE_GROUP, labels = age_group_labels)
# Calculating mortality rate by age group and any pre-existing condition
mortality_rate <- analysis_data %>%
mutate(ANY_CONDITION = ifelse(DIABETES == "Yes" | COPD == "Yes" | ASTHMA == "Yes" | INMSUPR == "Yes" | HIPERTENSION == "Yes" | OTHER_DISEASE == "Yes" | CARDIOVASCULAR == "Yes" | OBESITY == "Yes" | RENAL_CHRONIC == "Yes" | TOBACCO == "Yes", "Yes", "No")) %>%
group_by(AGE_GROUP, ANY_CONDITION, .drop = FALSE) %>%
summarise(Mortality_Rate = mean(DIED == "Yes", na.rm = TRUE), .groups = 'drop')
# Plotting
bar_graph <- ggplot(mortality_rate, aes(x = AGE_GROUP, y = Mortality_Rate, fill = ANY_CONDITION)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "COVID-19 Mortality Rate by Age Group and Pre-existing Condition",
x = "Age Group",
y = "Mortality Rate",
fill = "Pre-existing Condition")
# Save the plot
saveRDS(
bar_graph,
file = here::here("output/Bingbing_graph.rds")
)
library(tidyverse)
here::i_am("code/02_Bingbing_graph.R")
data <- readRDS(file = here::here("data_custom/data_custom.rds"))
# Convert categorical columns to factors
data <- data %>%
mutate(across(c(USMER, SEX, PATIENT_TYPE, INTUBED, PNEUMONIA, PREGNANT, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU), factor))
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED", "PNEUMONIA", "PREGNANT", "DIABETES", "COPD", "ASTHMA", "INMSUPR", "HIPERTENSION", "OTHER_DISEASE", "CARDIOVASCULAR", "OBESITY", "RENAL_CHRONIC", "TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) forcats::fct_explicit_na(x, na_level = "Unknown"))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
# Use quantiles as breaks for age groups
quantile_breaks <- quantile(analysis_data$AGE, probs = seq(0, 1, by = 0.2), na.rm = TRUE)
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = quantile_breaks, include.lowest = TRUE, labels = FALSE)
# Ensure that AGE_GROUP is a factor and has labels
age_group_labels <- sapply(1:(length(quantile_breaks)-1), function(i) paste0("[", quantile_breaks[i], "-", quantile_breaks[i+1], ")"))
analysis_data$AGE_GROUP <- factor(analysis_data$AGE_GROUP, labels = age_group_labels)
# Calculating mortality rate by age group and any pre-existing condition
mortality_rate <- analysis_data %>%
mutate(ANY_CONDITION = ifelse(DIABETES == "Yes" | COPD == "Yes" | ASTHMA == "Yes" | INMSUPR == "Yes" | HIPERTENSION == "Yes" | OTHER_DISEASE == "Yes" | CARDIOVASCULAR == "Yes" | OBESITY == "Yes" | RENAL_CHRONIC == "Yes" | TOBACCO == "Yes", "Yes", "No")) %>%
group_by(AGE_GROUP, ANY_CONDITION, .drop = FALSE) %>%
summarise(Mortality_Rate = mean(DIED == "Yes", na.rm = TRUE), .groups = 'drop')
# Plotting
bar_graph <- ggplot(mortality_rate, aes(x = AGE_GROUP, y = Mortality_Rate, fill = ANY_CONDITION)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "COVID-19 Mortality Rate by Age Group and Pre-existing Condition",
x = "Age Group",
y = "Mortality Rate",
fill = "Pre-existing Condition")
# Save the plot
saveRDS(
bar_graph,
file = here::here("output/Bingbing_graph.rds")
)
