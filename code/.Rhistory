axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
um <- ggplot() +
geom_point(aes(df$Mitoses,df$Class)) +
geom_smooth(aes(df$Mitoses,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Mitoses", size = 6)
ggsave("~/Desktop/FinalProject/output/um.png", plot = um)
# bland chromatin plot
ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Bland chromatin") +
ylab("Tumour type") +
xlab("Bland chromatin") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold", margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
bc <- ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Bland chromatin", size = 6)
ggsave("~/Desktop/FinalProject/output/bc.png", plot = bc)
# normal nucleoli plot
ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Normal nucleoli") +
ylab("Tumour type") +
xlab("Normal nucleoli") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
nn <- ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Normal nucleoli", size = 6)
ggsave("~/Desktop/FinalProject/output/nn.png", plot = nn)
# conbining all the plots together
ggarrange(ct, ma, bn, nn, um, bc,
ncol = 2, nrow = 3)
ggsave("~/Desktop/FinalProject/output/ct.png", plot = ct)
ggsave("~/Desktop/FinalProject/output/ma.png", plot = ma)
ggsave("~/Desktop/FinalProject/output/bn.png", plot = bn)
ggsave("~/Desktop/FinalProject/output/nn.png", plot = nn)
ggsave("~/Desktop/FinalProject/output/um.png", plot = um)
ggsave("~/Desktop/FinalProject/output/bc.png", plot = bc)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
# importing libraries
library(knitr)
library(kableExtra)
library(ggplot2)
library(dplyr)
library(caret)
library(ggcorrplot)
library(ggpubr)
library(naniar)
options(warn = -1)
# importing dataset
df<- read.csv("~/Desktop/FinalProject/data/breast_cancer.csv")
#studying the dataset
head(df)
# Convert the first few rows of the dataframe to a formatted table
knitr::kable(head(df), format = "markdown")
unique(df$Class)
# replacing the values with 0 and 1 for the purpose of building logistic regression model
df$Class <- ifelse(df$Class == 2, 0, 1)
# checking if any columns have missing values
colSums(is.na(df))
# finding correlations between the variables
correlation <- cor(df[,1:10])
heatmap <- ggcorrplot(correlation, type = "lower", lab = TRUE)
ggsave("~/Desktop/FinalProject/output/correlation_heatmap.png", plot = heatmap)
# clump thickness plot
ggplot() +
geom_point(aes(df$Clump.Thickness, df$Class)) +
geom_smooth(aes(df$Clump.Thickness, df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Clump Thickness") +
ylab("Tumour type") +
xlab("Clump thickness") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",
margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
ct <- ggplot() +
geom_point(aes(df$Clump.Thickness,df$Class)) +
geom_smooth(aes(df$Clump.Thickness,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=7.0, y=0.2, label="Clump thickness", size = 6)
ggsave("~/Desktop/FinalProject/output/ct.png", plot = ct)
# marginal adhesion plot
ggplot() +
geom_point(aes(df$Marginal.Adhesion,df$Class)) +
geom_smooth(aes(df$Marginal.Adhesion,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Marginal adhesion") +
ylab("Tumour type") +
xlab("Marginal adhesion") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold", margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
ma <- ggplot() +
geom_point(aes(df$Marginal.Adhesion,df$Class)) +
geom_smooth(aes(df$Marginal.Adhesion,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Marginal adhesion", size = 6)
ggsave("~/Desktop/FinalProject/output/ma.png", plot = ma)
# Bare nuclei plot
ggplot() +
geom_point(aes(df$Bare.Nuclei,df$Class)) +
geom_smooth(aes(df$Bare.Nuclei,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Bare nuclei") +
ylab("Tumour type") +
xlab("Bare nuclei") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold", margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
bn <- ggplot() +
geom_point(aes(df$Bare.Nuclei,df$Class)) +
geom_smooth(aes(df$Bare.Nuclei,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Bare nuclei", size = 6)
ggsave("~/Desktop/FinalProject/output/bn.png", plot = bn)
# Mitoses plot
ggplot() +
geom_point(aes(df$Mitoses,df$Class)) +
geom_smooth(aes(df$Mitoses,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Mitoses") +
ylab("Tumour type") +
xlab("Mitoses") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
um <- ggplot() +
geom_point(aes(df$Mitoses,df$Class)) +
geom_smooth(aes(df$Mitoses,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Mitoses", size = 6)
ggsave("~/Desktop/FinalProject/output/um.png", plot = um)
# bland chromatin plot
ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Bland chromatin") +
ylab("Tumour type") +
xlab("Bland chromatin") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold", margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
bc <- ggplot() +
geom_point(aes(df$Bland.Chromatin,df$Class)) +
geom_smooth(aes(df$Bland.Chromatin,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Bland chromatin", size = 6)
ggsave("~/Desktop/FinalProject/output/bc.png", plot = bc)
# normal nucleoli plot
ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
ggtitle("Breast Cancer Diagnosis \nusing Normal nucleoli") +
ylab("Tumour type") +
xlab("Normal nucleoli") +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.title = element_text(size = 25, face="bold",margin = margin(10,0,10,0)),
plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 15),
axis.title.x = element_text(size = 20, margin = margin(11,0,10,0)),
axis.text.y = element_text(size = 15),
axis.title.y = element_text(size = 20, margin=margin(0,10,0,11)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5,0,0, "cm"))
# additional plot for combination
nn <- ggplot() +
geom_point(aes(df$Normal.Nucleoli,df$Class)) +
geom_smooth(aes(df$Normal.Nucleoli,df$Class),
method = "glm", se = FALSE, method.args = list(family = "binomial"),
color = "#557153", size = 1.2) +
scale_y_continuous(breaks = c(0, 1), labels = c("Benign", "Malignant")) +
theme(plot.background = element_rect(fill = "#F0EBCE"),
panel.background = element_rect(fill = "#F0EBCE"),
axis.text.x = element_text(size = 10),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 10),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.margin = margin(0,0.5, 0, 0, "cm")) +
annotate("text",x=6.5, y=0.2, label="Normal nucleoli", size = 6)
ggsave("~/Desktop/FinalProject/output/nn.png", plot = nn)
# conbining all the plots together
ggarrange(ct, ma, bn, nn, um, bc,
ncol = 2, nrow = 3)
ggsave(
here::here ("output/Bingbing_graph.png"),
plot = bar_graph,
device = "png"
)
source("~/Desktop/Group7_DATA550/code/BIngbing_Graph.R")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU),
factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED",
"PNEUMONIA",
"PREGNANT",
"DIABETES",
"COPD",
"ASTHMA",
"INMSUPR",
"HIPERTENSION",
"OTHER_DISEASE",
"CARDIOVASCULAR",
"OBESITY",
"RENAL_CHRONIC",
"TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU)
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Grouping age into categories
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf), labels = c("0-18", "19-40", "41-60", "61-80", "81+"), right = FALSE)
# Ensure AGE is numeric
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
here::i_am("code/Bingbing_graph.R")
data <- read.csv(
file = here::here("raw_data/covid_sub.csv")
)
# Convert categorical columns to factors
data <- data %>%
mutate_at(vars(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU),
factor)
# Handling missing values: For simplicity, we'll convert NAs in binary columns to "Unknown"
binary_columns <- c("INTUBED",
"PNEUMONIA",
"PREGNANT",
"DIABETES",
"COPD",
"ASTHMA",
"INMSUPR",
"HIPERTENSION",
"OTHER_DISEASE",
"CARDIOVASCULAR",
"OBESITY",
"RENAL_CHRONIC",
"TOBACCO", "ICU")
data[binary_columns] <- lapply(data[binary_columns], function(x) addNA(x, ifany = TRUE))
# Assuming 'DATE_DIED' is NA for patients who didn't die, creating a binary outcome variable for mortality
data$DIED <- ifelse(is.na(data$DATE_DIED), "No", "Yes")
# Create a subset of data focusing on patient outcomes and conditions
analysis_data <- data %>%
select(USMER,
SEX,
PATIENT_TYPE,
INTUBED,
PNEUMONIA,
PREGNANT,
DIABETES,
COPD,
ASTHMA,
INMSUPR,
HIPERTENSION,
OTHER_DISEASE,
CARDIOVASCULAR,
OBESITY,
RENAL_CHRONIC,
TOBACCO,
ICU)
# Ensure AGE is numeric
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data <- data %>%
select(SEX, AGE, PATIENT_TYPE, DIED, INTUBED, PNEUMONIA, DIABETES, COPD, ASTHMA, INMSUPR, HIPERTENSION, OTHER_DISEASE, CARDIOVASCULAR, OBESITY, RENAL_CHRONIC, TOBACCO, ICU)
analysis_data$AGE <- as.numeric(as.character(analysis_data$AGE))
analysis_data$AGE_GROUP <- cut(analysis_data$AGE, breaks = c(0, 18, 40, 60, 80, Inf),
labels = c("0-18",
"19-40",
"41-60",
"61-80",
"81+"),
right = FALSE)
